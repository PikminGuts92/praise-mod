on: [push, pull_request]

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    env:
      ZIP_NAME: praise-mod-ci-${{ github.sha }}-${{ matrix.os == 'ubuntu-latest' && 'linux' || 'windows' }}.zip # Hacky way to lowercase os name
      BIN_PATH: ./target/release
      OUTPUT_PATH: ./build
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - name: Create output directory and copy licenses
        shell: bash
        run: |
          mkdir -p $OUTPUT_PATH
          cp ./LICENSE $OUTPUT_PATH/LICENSE -f
          cp ./README.md $OUTPUT_PATH/README.md -f
      - name: Copy executables to output directory
        shell: bash
        run: |
          for exe in $(find $BIN_PATH -maxdepth 1 -type f -executable -print); do
            cp $exe $OUTPUT_PATH/$(basename $exe) -f
          done
      - name: Zip files
        shell: bash
        run: 7z a ./build/$ZIP_NAME $(find $OUTPUT_PATH -type f)
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ZIP_NAME }}
          path: ./build/${{ env.ZIP_NAME }}